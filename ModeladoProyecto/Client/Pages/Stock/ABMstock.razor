@page "/stock"
@inject IHttpServicio http
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize]


<PageTitle>STOCK</PageTitle>

<h3 class="text-center">Stock</h3>

<html>
	<head>
		<meta charshet="utf-8"/>
		<meta content="width=device-widh, initial-scale=1" name="viewport" />

	</head>

	<body class="aligin-content-center">
		div class="insquare">
    <div class="table-responsive rounded-3">
        <table class="table table-striped table-hover table-bordered">
            <thead id="table-headers">
                <tr>
                    <th>Id</th>
                    <th>Codigo de stock</th>
                    <th>Producto</th>
                    <th>Cantidad</th>
                </tr>

                @if(Error)
                {
                  <tr>@Mensaje</tr>       
                }
                else
                {
                        
                
                @if (stock == null)
                        {
                        <tr>Cargando...</tr>
                        }
                else if (stock.Count == 0)
                        {
                        <tr>No existen los datos</tr>
                        }
                else
                        {
                        @foreach (var item in stock)
                            {
                            <tr>
                                <td>@item.id</td>
                                <td>@item.CodStock</td>
                                <td>@item.Producto</td>
                                <td>@item.Cantidad</td>
                               <td>
                                   <a class="btn btn-primary"
                                      href="stock/modificar/@item.id">
                                      Modificar      
                                   </a>

                               <a class="btn btn-primary"
                                  @onclick="()=>Eliminar(item)">
                                  Borrar

                               </a>
                               </td>

                            </tr>
                            
                            }
                }       }

            </thead>
            <tbody>
            </tbody>
        </table>
        <Confirmacion @ref="confirmacion"
                      verCancelar="true"
                      verOk="true"
                      textOk="Aceptar"
                      Titulo="Borrar especialidad"
                      onCancel="Cancelar"
                      onConfirm="Borrar">
            <div>
                <h1>Está por borrar la especialidad @StockBorrar.Producto</h1>
                <br />
                ¿Está seguro que desea continuar?
            </div>
        </Confirmacion>
    </div>
    <div class="d-flex">

        <button type="button" class="btn btn-info botones" 
            @onclick="() => AgregarStock()">
            Nuevo
        </button>
	</div>

	</body>

</html>


@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    Confirmacion confirmacion;

    List<Stock>? stock;
    bool Error = false;
    string Mensaje = "";
    Stock StockBorrar;


    protected override async Task OnInitializedAsync()
        {
        await base.OnInitializedAsync();
        await Leer();
        }




    private async Task Leer()
        {
        stock = null;
        var respuesta = await http.Get<List<Stock>>("api/stock");
        Error = respuesta.Error;
        if (!respuesta.Error)
            {
            stock = respuesta.Respuesta;
            }
        else
            {
            Mensaje = await respuesta.ObtenerError();
            }
        }


    private void AgregarStock()
        {
        NavigationManager.NavigateTo("/stock/crear");
        }





    private async Task Eliminar (Stock stoBorrar)
        {
        StockBorrar = stoBorrar;
        confirmacion.Ver();
        }

    private void Cancelar()
        {
        confirmacion.Ocultar();
        StockBorrar = null;
        }

    private async Task Borrar()
        {
        var respuesta = await http.Delete($"api/stock/{StockBorrar.id}");

        if (respuesta.Error)
            {
            var body = "ERROR no se pudo borrar";
            }
            Cancelar();
            await Leer();
        }



}
